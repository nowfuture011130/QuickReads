{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Avatar, Card, Text, List } from \"react-native-paper\";\nimport { globalStyles } from \"../styles/global\";\nimport { articles } from \"../articles\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Feed(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    reviews = _useState2[0],\n    setReviews = _useState2[1];\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    refresh = _React$useState2[0],\n    setRefresh = _React$useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedBookmark = _useState4[0],\n    setselectedBookmark = _useState4[1];\n  var root = \"http://quickreads-env.eba-nmhvwvfp.us-east-1.elasticbeanstalk.com\";\n  var accessToken = global.id;\n  var userLength = global.userLength == null ? \"mediumsummary\" : global.userLength;\n  console.log(\"Entering Top News\");\n  var addToBookmark = function addToBookmark(url) {\n    setselectedBookmark(function (preText) {\n      return [url].concat(_toConsumableArray(preText));\n    });\n  };\n  var changeBookmark = function changeBookmark() {\n    reviews.forEach(function (element) {\n      selectedBookmark.forEach(function (bookmark) {\n        if (bookmark == element.newsurl) {\n          element.isSelected = true;\n        }\n      });\n    });\n  };\n  function refreshBookmark() {\n    return _refreshBookmark.apply(this, arguments);\n  }\n  function _refreshBookmark() {\n    _refreshBookmark = _asyncToGenerator(function* () {\n      var articleRequest = yield fetch(root + \"/getBookmarks/\" + accessToken, {\n        method: \"GET\"\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJSON) {\n        for (var key in responseJSON) {\n          addToBookmark(responseJSON[key][\"url\"]);\n        }\n      }).catch();\n    });\n    return _refreshBookmark.apply(this, arguments);\n  }\n  function addToBackend(_x) {\n    return _addToBackend.apply(this, arguments);\n  }\n  function _addToBackend() {\n    _addToBackend = _asyncToGenerator(function* (item) {\n      var body = {\n        id: accessToken,\n        url: item.newsurl\n      };\n      try {\n        var response = yield fetch(root + \"/addbookmarkpost\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        });\n        if (!response.ok) {\n          throw new Error(\"Request failed with status \" + response.status);\n        }\n      } catch (error) {\n        console.error(\"Error occurred:\", error.message);\n      }\n    });\n    return _addToBackend.apply(this, arguments);\n  }\n  function removeFromBackend(_x2) {\n    return _removeFromBackend.apply(this, arguments);\n  }\n  function _removeFromBackend() {\n    _removeFromBackend = _asyncToGenerator(function* (item) {\n      var body = {\n        id: accessToken,\n        url: item.newsurl\n      };\n      try {\n        var response = yield fetch(root + \"/removebookmarkpost\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        });\n        if (!response.ok) {\n          throw new Error(\"Request failed with status \" + response.status);\n        }\n      } catch (error) {\n        console.error(\"Error occurred:\", error.message);\n      }\n    });\n    return _removeFromBackend.apply(this, arguments);\n  }\n  var addBookmark = function addBookmark(item) {\n    item.isSelected = true;\n    addToBackend(item);\n    console.log(\"add to bookmark\");\n  };\n  var removeBookmark = function removeBookmark(item) {\n    item.isSelected = false;\n    removeFromBackend(item);\n    setselectedBookmark(function (bookmark) {\n      return bookmark.filter(function (mark) {\n        return mark != item.newsurl;\n      });\n    });\n    console.log(\"remove from bookmark\");\n  };\n  var submitHandler = function submitHandler(text) {\n    setReviews(function (preText) {\n      return [text].concat(_toConsumableArray(preText));\n    });\n  };\n  var deleteHandler = function deleteHandler() {\n    setReviews(function (preText) {\n      return [];\n    });\n  };\n  useEffect(function () {\n    function wait() {\n      return _wait.apply(this, arguments);\n    }\n    function _wait() {\n      _wait = _asyncToGenerator(function* () {\n        refreshArticles();\n        refreshBookmark();\n        setRefresh(!refresh);\n      });\n      return _wait.apply(this, arguments);\n    }\n    wait();\n  }, []);\n  function refreshArticles() {\n    return _refreshArticles.apply(this, arguments);\n  }\n  function _refreshArticles() {\n    _refreshArticles = _asyncToGenerator(function* () {\n      var articleRequest = yield fetch(root + \"/gettoparticles/\" + accessToken, {\n        method: \"GET\"\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJSON) {\n        deleteHandler();\n        for (var key in responseJSON) {\n          submitHandler({\n            title: responseJSON[key][\"title\"],\n            summary: responseJSON[key][userLength],\n            key: key,\n            imgURL: responseJSON[key][\"imageurl\"],\n            newsurl: responseJSON[key][\"newsurl\"],\n            shouldShow: false,\n            isSelected: false\n          });\n        }\n      }).catch();\n    });\n    return _refreshArticles.apply(this, arguments);\n  }\n  var pressHandler = function pressHandler() {\n    navigation.navigate(\"ReviewDetail\");\n  };\n  var printArticles = function printArticles() {\n    console.log(reviews);\n    console.log(reviews[0].title);\n    console.log(reviews[0].summary);\n  };\n  function handleAddBookmark(_x3) {\n    return _handleAddBookmark.apply(this, arguments);\n  }\n  function _handleAddBookmark() {\n    _handleAddBookmark = _asyncToGenerator(function* (bookmarkURL) {\n      var body = {\n        url: bookmarkURL,\n        id: accessToken\n      };\n      console.log(body);\n      var request = yield fetch(root + \"/addbookmarkpost\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      }).catch();\n      console.log(\"Adding \" + bookmarkURL + \" to Bookmarks\");\n    });\n    return _handleAddBookmark.apply(this, arguments);\n  }\n  return _jsx(View, {\n    style: globalStyles.container,\n    children: _jsx(FlatList, {\n      data: reviews,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsxs(Card, {\n          style: globalStyles.newsCard,\n          children: [_jsx(Card.Content, {\n            children: _jsx(Text, {\n              variant: \"titleLarge\",\n              style: globalStyles.homeText,\n              children: item.title\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              changeBookmark();\n              item.shouldShow = !item.shouldShow;\n              setRefresh(!refresh);\n            },\n            children: _jsx(Card.Cover, {\n              borderRadius: 0,\n              source: {\n                uri: item.imgURL\n              }\n            })\n          }), _jsx(Card.Content, {\n            children: item.shouldShow ? _jsxs(View, {\n              children: [_jsx(Text, {\n                variant: \"titleLarge\",\n                children: item.summary\n              }), _jsxs(Card.Actions, {\n                children: [_jsx(FontAwesome, {\n                  name: \"link\",\n                  size: 45,\n                  color: \"#134F5C\",\n                  backgroundColor: \"transparent\",\n                  borderRadius: 10,\n                  suppressHighlighting: false,\n                  onPress: function onPress() {\n                    Linking.openURL(item.newsurl);\n                  }\n                }), _jsx(TouchableOpacity, {\n                  style: {\n                    flexDirection: \"row\",\n                    justifyContent: \"flex-end\"\n                  },\n                  children: !item.isSelected ? _jsx(FontAwesome, {\n                    name: \"bookmark-o\",\n                    size: 45,\n                    color: \"#134F5C\",\n                    backgroundColor: \"transparent\",\n                    borderRadius: 10,\n                    suppressHighlighting: false,\n                    onPress: function onPress() {\n                      addBookmark(item);\n                      setRefresh(!refresh);\n                    }\n                  }) : _jsx(FontAwesome, {\n                    name: \"bookmark\",\n                    size: 45,\n                    color: \"#134F5C\",\n                    backgroundColor: \"transparent\",\n                    borderRadius: 10,\n                    suppressHighlighting: false,\n                    onPress: function onPress() {\n                      removeBookmark(item);\n                      setRefresh(!refresh);\n                    }\n                  })\n                })]\n              })]\n            }) : null\n          })]\n        });\n      },\n      ItemSeparatorComponent: function ItemSeparatorComponent() {\n        return _jsx(View, {\n          style: {\n            height: 30\n          }\n        });\n      }\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","FlatList","TouchableOpacity","Button","Avatar","Card","Text","List","globalStyles","articles","FontAwesome","jsx","_jsx","jsxs","_jsxs","Feed","_ref","navigation","_useState","_useState2","_slicedToArray","reviews","setReviews","_React$useState","_React$useState2","refresh","setRefresh","_useState3","_useState4","selectedBookmark","setselectedBookmark","root","accessToken","global","id","userLength","console","log","addToBookmark","url","preText","concat","_toConsumableArray","changeBookmark","forEach","element","bookmark","newsurl","isSelected","refreshBookmark","_refreshBookmark","apply","arguments","_asyncToGenerator","articleRequest","fetch","method","then","response","json","responseJSON","key","catch","addToBackend","_x","_addToBackend","item","body","headers","JSON","stringify","ok","Error","status","error","message","removeFromBackend","_x2","_removeFromBackend","addBookmark","removeBookmark","filter","mark","submitHandler","text","deleteHandler","wait","_wait","refreshArticles","_refreshArticles","title","summary","imgURL","shouldShow","pressHandler","navigate","printArticles","handleAddBookmark","_x3","_handleAddBookmark","bookmarkURL","request","style","container","children","data","renderItem","_ref2","newsCard","Content","variant","homeText","onPress","Cover","borderRadius","source","uri","Actions","name","size","color","backgroundColor","suppressHighlighting","Linking","openURL","flexDirection","justifyContent","ItemSeparatorComponent","height"],"sources":["/Users/haoranwu/Documents/GitHub/QuickReads2/frontend/screens/Newsletter.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  FlatList,\n  TouchableOpacity,\n  Button,\n} from \"react-native\";\nimport { Avatar, Card, Text, List } from \"react-native-paper\";\nimport { globalStyles } from \"../styles/global\";\nimport { articles } from \"../articles\";\nimport { FontAwesome } from \"@expo/vector-icons\";\n\nexport default function Feed({ navigation }) {\n  const [reviews, setReviews] = useState([]);\n  const [refresh, setRefresh] = React.useState(false);\n  const [selectedBookmark, setselectedBookmark] = useState([]);\n\n  const root =\n    \"http://quickreads-env.eba-nmhvwvfp.us-east-1.elasticbeanstalk.com\";\n  let accessToken = global.id; \n  let userLength = (global.userLength == null)? \"mediumsummary\" : global.userLength;\n  console.log(\"Entering Top News\")\n\n  const addToBookmark = (url) => {\n    setselectedBookmark((preText) => {\n      return [url, ...preText];\n    });\n  };\n  const changeBookmark = () => {\n    //console.log(reviews);\n    reviews.forEach((element) => {\n      selectedBookmark.forEach((bookmark) => {\n        if (bookmark == element.newsurl) {\n          element.isSelected = true;\n        }\n      });\n    });\n  };\n  async function refreshBookmark() {\n    const articleRequest = await fetch(root + \"/getBookmarks/\" + accessToken, {\n      method: \"GET\",\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((responseJSON) => {\n        //console.log(responseJSON);\n        for (var key in responseJSON) {\n          addToBookmark(responseJSON[key][\"url\"]);\n        }\n      })\n      .catch();\n  }\n  async function addToBackend(item) {\n    const body = { id: accessToken, url: item.newsurl };\n    try {\n      const response = await fetch(root + \"/addbookmarkpost\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      });\n      if (!response.ok) {\n        throw new Error(`Request failed with status ${response.status}`);\n      }\n    } catch (error) {\n      console.error(\"Error occurred:\", error.message);\n    }\n  }\n  async function removeFromBackend(item) {\n    const body = { id: accessToken, url: item.newsurl };\n    try {\n      const response = await fetch(root + \"/removebookmarkpost\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      });\n      if (!response.ok) {\n        throw new Error(`Request failed with status ${response.status}`);\n      }\n    } catch (error) {\n      console.error(\"Error occurred:\", error.message);\n    }\n  }\n  //GET ARTICLES FROM BACKEND\n  const addBookmark = (item) => {\n    item.isSelected = true;\n    addToBackend(item);\n    console.log(\"add to bookmark\");\n  };\n  const removeBookmark = (item) => {\n    item.isSelected = false;\n    removeFromBackend(item);\n    setselectedBookmark((bookmark) => {\n      return bookmark.filter((mark) => mark != item.newsurl);\n    });\n    console.log(\"remove from bookmark\");\n  };\n  const submitHandler = (text) => {\n    setReviews((preText) => {\n      return [text, ...preText];\n    });\n  };\n  const deleteHandler = () => {\n    setReviews((preText) => {\n      return [];\n    });\n  };\n  useEffect(() => {\n    async function wait() {\n      refreshArticles();\n      refreshBookmark();\n      setRefresh(!refresh);\n    }\n    wait();\n  }, []);\n  // deleting all the articles\n  async function refreshArticles() {\n    const articleRequest = await fetch(root + \"/gettoparticles/\"+accessToken, {\n      method: \"GET\",\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((responseJSON) => {\n        deleteHandler();\n        for (var key in responseJSON) {\n          submitHandler({\n            title: responseJSON[key][\"title\"],\n            summary: responseJSON[key][userLength],\n            key: key,\n            imgURL: responseJSON[key][\"imageurl\"],\n            newsurl: responseJSON[key][\"newsurl\"],\n            shouldShow: false,\n            isSelected: false,\n          });\n        }\n      })\n      .catch();\n  }\n\n  const pressHandler = () => {\n    navigation.navigate(\"ReviewDetail\");\n  };\n\n  const printArticles = () => {\n    console.log(reviews);\n    console.log(reviews[0].title);\n    console.log(reviews[0].summary);\n  };\n\n  async function handleAddBookmark(bookmarkURL) {\n    let body = { url: bookmarkURL, id: accessToken };\n    console.log(body);\n    const request = await fetch(root + \"/addbookmarkpost\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    }).catch();\n    console.log(\"Adding \" + bookmarkURL + \" to Bookmarks\");\n  }\n\n  return (\n    <View style={globalStyles.container}>\n      <FlatList\n        data={reviews}\n        renderItem={({ item }) => (\n          <Card style={globalStyles.newsCard}>\n            <Card.Content>\n              <Text variant=\"titleLarge\" style={globalStyles.homeText}>\n                {item.title}\n              </Text>\n            </Card.Content>\n            <TouchableOpacity\n              //onPress={() => navigation.navigate(\"ReviewDetail\", item)}\n              onPress={() => {\n                //console.log(item.imgURL);\n                changeBookmark();\n                item.shouldShow = !item.shouldShow;\n                setRefresh(!refresh);\n              }}\n            >\n              <Card.Cover borderRadius={0} source={{ uri: item.imgURL }} />\n            </TouchableOpacity>\n            <Card.Content>\n              {item.shouldShow ? (\n                <View>\n                  <Text variant=\"titleLarge\">{item.summary}</Text>\n\n                  {/* <a target=\"_blank\" href={item.newsurl}>{item.newsurl}</a> */}\n                  <Card.Actions>\n                    <FontAwesome\n                        name=\"link\"\n                        size={45}\n                        color=\"#134F5C\"\n                        backgroundColor=\"transparent\"\n                        borderRadius={10}\n                        suppressHighlighting={false}\n                        onPress={() => {Linking.openURL(item.newsurl)}}\n                      />\n                    <TouchableOpacity\n                      style={{ flexDirection: \"row\", justifyContent: \"flex-end\" }}\n                    >\n                      {!item.isSelected ? (\n                        <FontAwesome\n                          name=\"bookmark-o\"\n                          size={45}\n                          color=\"#134F5C\"\n                          backgroundColor=\"transparent\"\n                          borderRadius={10}\n                          suppressHighlighting={false}\n                          onPress={() => {\n                            addBookmark(item);\n                            setRefresh(!refresh);\n                          }}\n                        />\n                      ) : (\n                        <FontAwesome\n                          name=\"bookmark\"\n                          size={45}\n                          color=\"#134F5C\"\n                          backgroundColor=\"transparent\"\n                          borderRadius={10}\n                          suppressHighlighting={false}\n                          onPress={() => {\n                            removeBookmark(item);\n                            setRefresh(!refresh);\n                          }}\n                        />\n                      )}\n                    </TouchableOpacity>\n                  </Card.Actions>\n                </View>\n                \n              ) : null}   \n            </Card.Content>\n          </Card>\n        )}\n        ItemSeparatorComponent={() => <View style={{ height: 30 }} />}\n      />\n    </View>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}