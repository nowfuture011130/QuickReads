{"ast":null,"code":"import { React, useContext } from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { HomeStackNavigator, CategoryStackNavigator, SettingStackNavigator, NewsletterStackNavigator } from \"./homeStack\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { DefaultTheme, Provider as PaperProvider } from 'react-native-paper';\nimport { globalStyles } from \"../styles/global\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar BottomTabNavigator = function BottomTabNavigator(_ref) {\n  var route = _ref.route;\n  var userInfo = route.params.userInfo;\n  return _jsxs(Tab.Navigator, {\n    screenOptions: {\n      tabBarStyle: {\n        backgroundColor: \"#A2C4C9\"\n      }\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"BottomHome\",\n      component: HomeStackNavigator,\n      options: {\n        headerShown: false,\n        tabBarShowLabel: true,\n        tabBarLabel: \"Feed\",\n        showIcon: true,\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color;\n          return _jsx(Ionicons, {\n            name: \"newspaper-outline\",\n            size: 28,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: \"#FFFFFF\",\n        tabBarInactiveTintColor: \"#134F5C\"\n      },\n      style: {\n        color: '#A2C4C9'\n      }\n    }), _jsx(Tab.Screen, {\n      options: {\n        headerShown: false,\n        tabBarShowLabel: true,\n        tabBarLabel: \"Top News\",\n        showIcon: true,\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color;\n          return _jsx(Ionicons, {\n            name: \"flame-outline\",\n            size: 28,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: \"#FFFFFF\",\n        tabBarInactiveTintColor: \"#134F5C\"\n      },\n      name: \"BottomNewsletter\",\n      component: NewsletterStackNavigator\n    }), _jsx(Tab.Screen, {\n      options: {\n        headerShown: false,\n        tabBarShowLabel: true,\n        tabBarLabel: \"Categories\",\n        showIcon: true,\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var color = _ref4.color;\n          return _jsx(Ionicons, {\n            name: \"duplicate-outline\",\n            size: 28,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: \"#FFFFFF\",\n        tabBarInactiveTintColor: \"#134F5C\"\n      },\n      name: \"BottomCategory\",\n      component: CategoryStackNavigator\n    }), _jsx(Tab.Screen, {\n      options: {\n        headerShown: false,\n        tabBarShowLabel: true,\n        tabBarLabel: \"Settings\",\n        showIcon: true,\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var color = _ref5.color;\n          return _jsx(Ionicons, {\n            name: \"person-circle-outline\",\n            size: 28,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: \"#FFFFFF\",\n        tabBarInactiveTintColor: \"#134F5C\"\n      },\n      name: \"BottomSetting\",\n      component: SettingStackNavigator\n    })]\n  });\n};\nexport default BottomTabNavigator;","map":{"version":3,"names":["React","useContext","createBottomTabNavigator","HomeStackNavigator","CategoryStackNavigator","SettingStackNavigator","NewsletterStackNavigator","Image","Ionicons","DefaultTheme","Provider","PaperProvider","globalStyles","jsx","_jsx","jsxs","_jsxs","Tab","BottomTabNavigator","_ref","route","userInfo","params","Navigator","screenOptions","tabBarStyle","backgroundColor","children","Screen","name","component","options","headerShown","tabBarShowLabel","tabBarLabel","showIcon","tabBarIcon","_ref2","color","size","tabBarActiveTintColor","tabBarInactiveTintColor","style","_ref3","_ref4","_ref5"],"sources":["/Users/haoranwu/Documents/GitHub/QuickReads2/frontend/routes/bottomTab.js"],"sourcesContent":["import {React, useContext} from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport {\n  HomeStackNavigator,\n  CategoryStackNavigator,\n  SettingStackNavigator,\n  NewsletterStackNavigator,\n} from \"./homeStack\";\nimport { Image } from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { DefaultTheme, Provider as PaperProvider } from 'react-native-paper';\nimport { globalStyles } from \"../styles/global\";\n\nconst Tab = createBottomTabNavigator();\n\nconst BottomTabNavigator = ({route}) => {\n  const { userInfo } = route.params;\n  //GETS THE USER SUMMARY LENGTH//\n  // accessToken = userInfo.id; \n  // async function getUserCategories() {\n  //   console.log(root+\"/getcategory/\"+accessToken); \n  //   const request = await fetch(root+\"/getcategory/\"+accessToken, {\n  //     method: \"GET\",\n  //   })\n  //     .then((response) => {\n  //       return response.json();\n  //     })\n  //     .then((responseJSON) => {\n  //       let cats = responseJSON;\n  //       setCatlist((oldArr) => cats);\n  //     })\n  //     .catch();\n  //   return;\n  // }\n\n  return (\n      <Tab.Navigator \n        screenOptions={{\n          tabBarStyle: {backgroundColor: \"#A2C4C9\"},\n        }}\n      >\n        <Tab.Screen\n          name=\"BottomHome\"\n          component={HomeStackNavigator}\n          options={{\n            headerShown: false,\n            tabBarShowLabel: true,\n            tabBarLabel: \"Feed\",\n            showIcon: true,\n            tabBarIcon:({color})=>(\n              <Ionicons name=\"newspaper-outline\" size={28} color = {color}/>\n              ),\n              tabBarActiveTintColor: \"#FFFFFF\",\n              tabBarInactiveTintColor: \"#134F5C\"\n          }}\n          style={{ color: '#A2C4C9' }}\n        />\n        <Tab.Screen\n          options={{\n            headerShown: false,\n            tabBarShowLabel: true,\n            tabBarLabel: \"Top News\",\n            showIcon: true,\n            tabBarIcon:({color})=>(\n              <Ionicons name=\"flame-outline\" size={28} color = {color}/>\n              ),\n              tabBarActiveTintColor: \"#FFFFFF\",\n              tabBarInactiveTintColor: \"#134F5C\"\n          }}\n          name=\"BottomNewsletter\"\n          component={NewsletterStackNavigator}\n        />\n        <Tab.Screen\n          options={{\n            headerShown: false,\n            tabBarShowLabel: true,\n            tabBarLabel: \"Categories\",\n            showIcon: true,\n            tabBarIcon:({color})=>(\n              <Ionicons name=\"duplicate-outline\" size={28} color = {color}/>\n              ),\n              tabBarActiveTintColor: \"#FFFFFF\",\n              tabBarInactiveTintColor: \"#134F5C\"\n          }}\n          name=\"BottomCategory\"\n          component={CategoryStackNavigator}\n        />\n        <Tab.Screen\n          options={{\n            headerShown: false,\n            tabBarShowLabel: true,\n            tabBarLabel: \"Settings\",\n            showIcon: true,\n            tabBarIcon:({color})=>(\n              <Ionicons name=\"person-circle-outline\" size={28} color = {color}/>\n              ),\n            tabBarActiveTintColor: \"#FFFFFF\",\n            tabBarInactiveTintColor: \"#134F5C\"\n          }}\n          name=\"BottomSetting\"\n          component={SettingStackNavigator}\n        />\n      </Tab.Navigator>\n  );\n};\n\nexport default BottomTabNavigator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}